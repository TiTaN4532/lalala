{% trans_default_domain 'FOSUserBundle' %}

{% form_theme form 'LaNetLaNetBundle:Form:fields.html.twig' %}

{% macro phone_prototype(phone) %}
   +38 ({{ form_widget(phone.operator) }}) {{ form_widget(phone.number) }}
{% endmacro %}

{% macro mail_prototype(mail) %}
   {{ form_widget(mail.name) }}
{% endmacro %}

 <h1 class='line' style="float:left;margin-right: 10px;">Регистриция</h1><hr align="right" style="width:auto;margin: 37px; padding: 0 10px; " size="2" color="#AAA" />
{% if not app.request.get('type') %}
  <h5 class="clear" style="color: #AAA;">1. ВЫ РЕГИСТРИРУЕТЕСЬ КАК:</h5>
  <div id="registration">
    <a href="{{ path('fos_user_registration_register', {'type': 'consumer'}) }}">Обычный пользователь</a>
    <a href="{{ path('fos_user_registration_register', {'type': 'specialist'}) }}">Специалист</a>
    <a href="{{ path('fos_user_registration_register', {'type': 'salon'}) }}">Салон</a>
    {#<a href="{{ path('fos_user_registration_register', {'type': 'agancy'}) }}">Представительство</a>
    <a href="{{ path('fos_user_registration_register', {'type': 'shop'}) }}">Магазин</a>
    <a href="{{ path('fos_user_registration_register', {'type': 'school_center'}) }}">Учебный центр</a>#}
    
  </div>
{% else %}
  <h5 class="clear" style="color: #AAA;">2. ВЫ РЕГИСТРИРУЕТЕСЬ КАК
        {% if app.request.get('type') == 'specialist' %} МАСТЕР.
        {% elseif app.request.get('type') == 'consumer' %} ОБЫЧНЫЙ ПОЛЬЗОВАТЕЛЬ.
        {% elseif app.request.get('type') == 'salon' %} САЛОН.
        {% elseif app.request.get('type') == 'agancy' %} ПРЕДСТАВИТЕЛЬСТВО.
        {% elseif app.request.get('type') == 'shop' %} МАГАЗИН.
        {% elseif app.request.get('type') == 'school_center' %} ОБУЧАЮЩИЙ ЦЕНТР.
        {% endif %}</h5>
  <div class="col col_1_of_2">
  <form action="" {{ form_enctype(form) }} method="POST" class="fos_user_registration_register" name="{{ form.vars.name }}">
    {{ form_errors(form) }}
    {{ form_row(form.email) }}
    {{ form_row(form.plainPassword) }}
    {% if app.request.get('type') == 'specialist' %}
        {{ form_row(form.userInfo.firstName) }}
        {{ form_row(form.userInfo.lastName) }}
        {{ form_row(form.userInfo.link) }}
        {{ form_row(form.userInfo.gender) }}
        {{ form_row(form.userInfo.birthday) }}
        <div style="margin: 10px 0;">
            {{ form_label(form.userInfo.serviceType) }}
            {{ form_widget(form.userInfo.serviceType) }}
        </div>
        <div style="margin: 10px 0;">
            {{ form_label(form.userInfo.category) }}
            {{ form_widget(form.userInfo.category) }}
        </div>

        <div class="row">
            <div class="col col_1_of_1">
                <label>Место работы:</label>
                <input type="text" id="Service_address" style="width:100%;"/>
                <div id="map" style="width:100%;height:150px;"></div>
                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCNnUyeCiwNqfCJGhYm3-7q5YkyDklTZOM&sensor=false&libraries=places"></script>
                <script>
                    function initialize() {
                        var map_canvas = document.getElementById('map');
                        var map_options = {
                            center: new google.maps.LatLng(51.507, 0.127),
                            zoom: 8
                        };
                        var map = new google.maps.Map(map_canvas, map_options);

                        if(navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition(function(position) {
                                var location = new google.maps.LatLng(
                                    position.coords.latitude,
                                    position.coords.longitude
                                );

                                map.setCenter(location);
                                map.setZoom(17);
                            });
                        }

                        var input = document.getElementById('Service_address');
                        var autocomplete = new google.maps.places.Autocomplete(input);
                        google.maps.event.addListener(map, 'click', function(event) 
                            {
                                $.ajax({
                                    url: "http://maps.googleapis.com/maps/api/geocode/json?latlng=" + event.latLng.lat() + "," + event.latLng.lng() + "&sensor=false&language=ru",
                                    success     : function(data) {
                                          fill_address(data);    
                                          $('#fos_user_registration_form_userInfo_location_lang').val(event.latLng.lng());
                                          $('#fos_user_registration_form_userInfo_location_lat').val(event.latLng.lat());
                                          input.value = (data.results[0].formatted_address);
                                         }
                                });
                            });
                        google.maps.event.addListener(autocomplete, 'place_changed', function() {
                        
                            var place = autocomplete.getPlace();
                            if (!place.geometry) {
                                return;
                            }

                            var position = place.geometry.location;
                                        
                            $.ajax({
                                url: "http://maps.googleapis.com/maps/api/geocode/json?latlng=" + position.lat() + "," + position.lng() + "&sensor=false&language=ru",
                                success     : function(data) {
                                        
                                       fill_address(data);               
                                       $('#fos_user_registration_form_userInfo_location_lang').val(position.lng());
                                       $('#fos_user_registration_form_userInfo_location_lat').val(position.lat());
                                       input.value = (data.results[0].formatted_address);
                                     }});
                            if (place.geometry.viewport) {
                                map.fitBounds(place.geometry.viewport);
                            } else {
                                map.setCenter(position);
                                map.setZoom(17);
                            }

                            var marker = new google.maps.Marker({
                                position: position,
                                map: map
                            });

                        });
                    }
                    function fill_address(data) {
                        for (var i = 0; i < data.results[0].address_components.length; i++) {
                            switch(data.results[0].address_components[i].types[0]) {
                                case "country":
                                    $('#fos_user_registration_form_userInfo_location_country').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "administrative_area_level_1":
                                    $('#fos_user_registration_form_userInfo_location_administrative_area').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "locality":
                                    $('#fos_user_registration_form_userInfo_location_locality').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "sublocality_level_1":
                                    $('#fos_user_registration_form_userInfo_location_sublocality').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "route":
                                    $('#fos_user_registration_form_userInfo_location_route').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "street_number":
                                    $('#fos_user_registration_form_userInfo_location_streetNumber').val(data.results[0].address_components[i].long_name);
                                    break;
                            }
                        }
                    }
                    google.maps.event.addDomListener(window, 'load', initialize);
                </script>
                {{ form_widget(form.userInfo.location.country) }}
                {{ form_widget(form.userInfo.location.administrative_area) }}
                {{ form_widget(form.userInfo.location.locality) }}
                {{ form_widget(form.userInfo.location.sublocality) }}
                {{ form_widget(form.userInfo.location.route) }}
                {{ form_widget(form.userInfo.location.streetNumber) }}
                {{ form_widget(form.userInfo.location.lang) }}
                {{ form_widget(form.userInfo.location.lat) }}
                </div>
        </div>
        <label>Телефон: (+38 0XX XXXXXXX)</label>
        <ul class="phone" data-prototype="{{ _self.phone_prototype(form.phone.vars.prototype)|e }}">
            {% for item in form.phone %}
                <li>+38 ({{ form_widget(item.operator) }}) {{ form_widget(item.number) }}</li>
            {% endfor %}
        </ul>
        <div>{{ form_widget(form.showPhone) }}{{ form_label(form.showPhone) }}</div>
        <label>Дополнительный электронный адрес:</label>
        <ul class="mail" data-prototype="{{ _self.mail_prototype(form.mail.vars.prototype)|e }}">
            {% for item in form.mail %}
                <li>{{ form_widget(item.name) }}</li>
            {% endfor %}
        </ul>
        <div>{{ form_widget(form.showMail) }}{{ form_label(form.showMail) }}</div>        
        {{ form_row(form.userInfo.startWork) }}
    {% elseif app.request.get('type') == 'consumer' %}   
        {{ form_row(form.userInfo.firstName) }}
        {{ form_row(form.userInfo.lastName) }}
        {{ form_row(form.userInfo.gender) }}
        {{ form_row(form.userInfo.birthday) }}

    <label>Телефон: (+38 0XX XXXXXXX)</label>
    <ul class="phone" data-prototype="{{ _self.phone_prototype(form.phone.vars.prototype)|e }}">
        {% for item in form.phone %}
            <li>+38 ({{ form_widget(item.operator) }}) {{ form_widget(item.number) }}</li>
        {% endfor %}
    </ul>
    <div>{{ form_widget(form.showPhone) }}{{ form_label(form.showPhone) }}</div>
    <label>Дополнительный электронный адрес:</label>
    <ul class="mail" data-prototype="{{ _self.mail_prototype(form.mail.vars.prototype)|e }}">
        {% for item in form.mail %}
            <li>{{ form_widget(item.name) }}</li>
        {% endfor %}
    </ul>
    <div>{{ form_widget(form.showMail) }}{{ form_label(form.showMail) }}</div>

    {% elseif app.request.get('type') == 'salon' %}   
        {{ form_row(form.userInfo.name) }}
        {{ form_row(form.userInfo.link) }}
        <div style="margin: 10px 0;">
            {{ form_label(form.userInfo.category) }}
            {{ form_widget(form.userInfo.category) }}
        </div>

        <div class="row">
            <div class="col col_1_of_1">
                <label>Адрес:</label>
                <input type="text" id="Service_address" style="width:100%;"/>
                <div id="map" style="width:100%;height:150px;"></div>
                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCNnUyeCiwNqfCJGhYm3-7q5YkyDklTZOM&sensor=false&libraries=places"></script>
                <script>
                    function initialize() {
                        var map_canvas = document.getElementById('map');
                        var map_options = {
                            center: new google.maps.LatLng(51.507, 0.127),
                            zoom: 8
                        };
                        var map = new google.maps.Map(map_canvas, map_options);

                        if(navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition(function(position) {
                                var location = new google.maps.LatLng(
                                    position.coords.latitude,
                                    position.coords.longitude
                                );

                                map.setCenter(location);
                                map.setZoom(17);
                            });
                        }

                        var input = document.getElementById('Service_address');
                        var autocomplete = new google.maps.places.Autocomplete(input);
                        google.maps.event.addListener(map, 'click', function(event) 
                            {
                                $.ajax({
                                    url: "http://maps.googleapis.com/maps/api/geocode/json?latlng=" + event.latLng.lat() + "," + event.latLng.lng() + "&sensor=false&language=ru",
                                    success     : function(data) {
                                          fill_address(data);    
                                          $('#fos_user_registration_form_userInfo_location_lang').val(event.latLng.lng());
                                          $('#fos_user_registration_form_userInfo_location_lat').val(event.latLng.lat());
                                          input.value = (data.results[0].formatted_address);
                                         }
                                });
                            });
                        google.maps.event.addListener(autocomplete, 'place_changed', function() {
                        
                            var place = autocomplete.getPlace();
                            if (!place.geometry) {
                                return;
                            }

                            var position = place.geometry.location;
                                        
                            $.ajax({
                                url: "http://maps.googleapis.com/maps/api/geocode/json?latlng=" + position.lat() + "," + position.lng() + "&sensor=false&language=ru",
                                success     : function(data) {
                                        
                                       fill_address(data);               
                                       $('#fos_user_registration_form_userInfo_location_lang').val(position.lng());
                                       $('#fos_user_registration_form_userInfo_location_lat').val(position.lat());
                                       input.value = (data.results[0].formatted_address);
                                     }});
                            if (place.geometry.viewport) {
                                map.fitBounds(place.geometry.viewport);
                            } else {
                                map.setCenter(position);
                                map.setZoom(17);
                            }

                            var marker = new google.maps.Marker({
                                position: position,
                                map: map
                            });

                        });
                    }
                    function fill_address(data) {
                        for (var i = 0; i < data.results[0].address_components.length; i++) {
                            switch(data.results[0].address_components[i].types[0]) {
                                case "country":
                                    $('#fos_user_registration_form_userInfo_location_country').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "administrative_area_level_1":
                                    $('#fos_user_registration_form_userInfo_location_administrative_area').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "locality":
                                    $('#fos_user_registration_form_userInfo_location_locality').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "sublocality_level_1":
                                    $('#fos_user_registration_form_userInfo_location_sublocality').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "route":
                                    $('#fos_user_registration_form_userInfo_location_route').val(data.results[0].address_components[i].long_name);
                                    break;
                                case "street_number":
                                    $('#fos_user_registration_form_userInfo_location_streetNumber').val(data.results[0].address_components[i].long_name);
                                    break;
                            }
                        }
                    }
                    google.maps.event.addDomListener(window, 'load', initialize);
                </script>
                {{ form_widget(form.userInfo.location.country) }}
                {{ form_widget(form.userInfo.location.administrative_area) }}
                {{ form_widget(form.userInfo.location.locality) }}
                {{ form_widget(form.userInfo.location.sublocality) }}
                {{ form_widget(form.userInfo.location.route) }}
                {{ form_widget(form.userInfo.location.streetNumber) }}
                {{ form_widget(form.userInfo.location.lang) }}
                {{ form_widget(form.userInfo.location.lat) }}
                </div>
        </div>
        <label>Телефон: (+38 0XX XXXXXXX)</label>
        <ul class="phone" data-prototype="{{ _self.phone_prototype(form.phone.vars.prototype)|e }}">
            {% for item in form.phone %}
                <li>+38 ({{ form_widget(item.operator) }}) {{ form_widget(item.number) }}</li>
            {% endfor %}
        </ul>
        <div>{{ form_widget(form.showPhone) }}{{ form_label(form.showPhone) }}</div>
        <label>Дополнительный электронный адрес:</label>
        <ul class="mail" data-prototype="{{ _self.mail_prototype(form.mail.vars.prototype)|e }}">
            {% for item in form.mail %}
                <li>{{ form_widget(item.name) }}</li>
            {% endfor %}
        </ul>
        <div>{{ form_widget(form.showMail) }}{{ form_label(form.showMail) }}</div>
    {% elseif app.request.get('type') == 'agancy' %}   
        {{ form_row(form.userInfo.name) }}
        {{ form_row(form.userInfo.category) }}
    {% elseif app.request.get('type') == 'shop' %}   
        {{ form_row(form.userInfo.name) }}
    {% elseif app.request.get('type') == 'school_center' %}   
        {{ form_row(form.userInfo.name) }}
        {{ form_row(form.userInfo.category) }}
    {% endif %}
        <div>{{ form_widget(form.newsNotify, { 'attr' : {'checked' : 'checked'}} ) }}{{ form_label(form.newsNotify) }}</div>
        <div>{{ form_widget(form.termsConditions) }}{{ form_label(form.termsConditions) }} <a href="" class="blue-link">пользовательским соглашением</a></div>
        {{ form_row(form._token) }}
    <div>
        <input type="submit" value="{{ 'registration.submit'|trans }}" />
    </div>
  </form>
   
{% endif %}
</div>
