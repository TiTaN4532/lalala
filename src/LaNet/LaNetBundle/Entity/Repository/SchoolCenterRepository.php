<?php

namespace LaNet\LaNetBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use LaNet\LaNetBundle\Entity;
use Symfony\Component\HttpFoundation\Request;

/**
 * SchoolCenterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SchoolCenterRepository extends EntityRepository
{
    
     public function findFilteredSchools($peginator = false, $onPage = 1, $region = false)
    {
      $request = Request::createFromGlobals();
      $searchterm = preg_replace('/_|%/', '\$1', $request->get('name'));
      $whereRegion = '';
      if($region) {
          $whereRegion = "l.administrative_area LIKE '%" . trim($region, '.') . "%' AND";
      } 
      $category = ($request->get('category')) ? " AND c.id = '" . $request->get('category') ."'" : "";
      $city = ($request->get('city')) ? " AND l.locality = '" . $request->get('city') ."'" : "";
      $query = $this->_em->createQuery("SELECT s, c  FROM LaNetLaNetBundle:School s 
                                                    LEFT JOIN s.category c     
                                                    LEFT JOIN s.location l
                                                    LEFT JOIN s.user u 
                                                    WHERE " . $whereRegion . "  (s.name LIKE :like)".$category.$city. "ORDER BY s.inTop DESC, s.name ASC")
                          ->setParameters(array('like' => '%'.$searchterm.'%'));
      if ($peginator) {
        $page = $request->query->get('page', 1);
        return $peginator->paginate($query, $page, $onPage);
      }
      else {
        return $query->getResult();
      }
    }
    
     public function findFilteredSchoolsOnMainPage($limit='')
    {
      $query = $this->_em->createQuery("SELECT s FROM LaNetLaNetBundle:School s
                                                   LEFT JOIN s.user u    
                                                   WHERE s.inTop IS NOT NULL ORDER BY s.inTop DESC");
            if ($limit){
                $query->setMaxResults($limit);    
            }
        return $query->getResult();
     
    }
    public function findListSchools($name = '')
    {
     $searchterm = '';   
      if ($name){
          $searchterm = preg_replace('/_|%/', '\$1', $name);
      }
       
     $query = $this->_em->createQuery("SELECT s, u FROM LaNetLaNetBundle:School s 
                                                           LEFT JOIN s.user u     
                                                           WHERE (s.name LIKE :like OR u.email LIKE :like) ORDER BY s.inTop DESC, u.created DESC")
                           ->setParameters(array('like' => '%'.$searchterm.'%'));

      return $query->getResult();
           
        
    }  
    
}
